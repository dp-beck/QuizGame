@page "/all-questions"
@using QuizGame.Data.Entities
@using QuizGame.Services
@inject IQuestionService QuestionService

@rendermode InteractiveServer

@{
    /*
    Notes: Gives you a list of all the questions with two buttons: delete and edit;
    Delete gets rid of the question
    Edit takes you to a new screen to edit the content of the question
    */
}

<h3>Questions</h3>

@if (_questions is not null)
{
    <ol>
    @foreach (var question in _questions)
    {
        <li>
            @question.QuestionText 
            <span>
                <button class="btn btn-secondary">Edit</button>
                <button class="btn btn-primary" @onclick="() => DeleteQuestion(question.Id)">Delete</button>
            </span>
        </li> 
    }
    </ol>
}

@code {

    private List<Question>? _questions;

    protected override async Task OnInitializedAsync()
    {
        _questions = await QuestionService.GetAllQuestionsAsync();
    }

    public async Task DeleteQuestion(int id)
    { 
        Console.Write("works");
       await QuestionService.DeleteQuestion(id);
       _questions = await QuestionService.GetAllQuestionsAsync();
    }

}